@layout MainLayout;
@page "/Profile";
@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime;
@using HeresKids.Datamodels;

<div class="">    
    <div class="row">
        <div class="col-3"></div>
        <div class="col-6" style="text-align: center;">
            <h3>Profile</h3>
        </div>
        <div class="col-3"></div>
    </div>

    <div class="row" style="margin-top:20px;">
        <div class="col-1"></div>
        <div class="col-10">
            <div class="card">
            <div class="card-header">
                <h2>Basic Information</h2>
            </div>
            <div class="card-body">
                <label>Name</label>
                <input type="text" @bind="txt_name" @bind:event="onchange" class="form-control" />

                <label>Phone Number</label>
                <input type="text" @bind="txt_pn" @bind:event="onchange" class="form-control" />

                <label>Subscriptions</label>
                <input type="text" @bind="txt_sub" @bind:event="onchange" class="form-control" />
            </div>
            </div>
        </div>
        <div class="col-1"></div>
    </div>

    <div class="row" style="margin-top:20px;">
        <div class="col-1"></div>
        <div class="col-10">
            @if(!isLoading) {
                <button class="btn btn-gsky btn-lg" style="width:100%;" @onclick="RunSave">Save Profile</button>
            } else {
                <button class="btn btn-gsky btn-lg" disabled ><span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span> Saving...</button>
            }
                <br />
                <br />
            <button class="btn btn-danger btn-lg" style="width:100%;" @onclick="RunLogout">Logout</button>
        </div>
        <div class="col-1"></div>
    </div>


    <br><br><br><br><br><br>

    
</div>

@code {
    private RealmUser user = new RealmUser{};
    private CustomProfileData cpd = new CustomProfileData{};
    private bool isLoading = true;
    private string txt_pn = "+1";
    private string txt_name, txt_sub = "";

    private async Task RunSave() {
        isLoading = true;
        string cleanPhone = txt_pn.Replace("-","").Replace(" ","").Replace(")","").Replace("(","");
        if(cleanPhone.Substring(0,2) != "+1") {
            if(cleanPhone.Substring(0,1) == "1") {
                cleanPhone = "+"+cleanPhone;
            } else {
                cleanPhone = "+1"+cleanPhone;
            }
        }
        string[] args = { user.id, cleanPhone, txt_name, txt_sub};

        cpd = await JSRuntime.InvokeAsync<CustomProfileData>("realmShim_Function", "setMyProfile", args);
        txt_pn = cpd.pn;
        txt_name = cpd.name;
        txt_sub = string.Join(", ",  cpd.subscriptions);
        isLoading = false;
    }

    private async Task RunLogout() {
        await JSRuntime.InvokeVoidAsync("logout");
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await JSRuntime.InvokeAsync<RealmUser>("getUserDetails");
            string[] args = { user.id};
            cpd = await JSRuntime.InvokeAsync<CustomProfileData>("realmShim_Function", "getMyProfile", args);
            txt_pn = cpd.pn;
            txt_name = cpd.name;
            txt_sub = string.Join(", ",  cpd.subscriptions);
            isLoading = false;
            
        } catch(Exception ex) {
            NavigationManager.NavigateTo("/");
        }
    }
}