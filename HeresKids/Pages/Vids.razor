@layout MainLayout;
@page "/Vids";
@page "/Home";
@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime;
@using HeresKids.Datamodels;

<div>    
    @if(!isLoading) {
        <div class="row" style="margin-top:20px;">
            @foreach (var li in l)
            {
                    <div class="col-3" @onclick="@(e => SwitchVideoClick(e, li))" style="text-align: center;">
                        <center>
                            @if(li.isFavorite) {
                                <div class="vidThumb" style="@String.Format("border-radius: 50% 50% 50% 50% / 21% 21% 79% 79% ;background: url(http://grabosky.dyndns.org:9999/media/{0}.jpg);background-size:cover;background-repeat:no-repeat;height:64px;width:64px;background-position: center center;z-index:0;border:5px solid #{1}", li.path, li.babycolor)"></div>
                            } else {
                                <div class="vidThumb" style="@String.Format("border-radius: 50%;background: url(http://grabosky.dyndns.org:9999/media/{0}.jpg);background-size:cover;background-repeat:no-repeat;height:64px;width:64px;background-position: center center;z-index:0;border:5px solid #{1}", li.path, li.babycolor)"></div>
                            }
                            <br>
                            <span style="text-transform: capitalize;">@li.createdby</span>
                            <br>
                            <span>@li.created.ToString("MMM dd")</span>
                        </center>
                    </div>
                <br><br>
            }
        </div>

        <div class="row" style="margin-top:20px;">
            <div class="col-1"></div>
            <div class="col-10">
                <EmbedVid Path="@selecectedVideo" />
            </div>
            <div class="col-1"></div>
        </div>

        @if(isRightClick) {
            <div class="row" style="margin-top:20px;">
                <div class="col-3"></div>
                <div class="col-3">
                    <button @onclick="MarkAsFav" class="btn btn-gsky-secondary"><span class="oi oi-heart"></span></button>
                </div>
                <div class="col-3">
                    <button @onclick="MarkAsArch" class="btn btn-gsky-warning"><span class="oi oi-trash"></span></button>
                </div>
                <div class="col-3"></div>
            </div>
        }

        <div class="row" style="margin-top:20px;">
            <div class="col-1"></div>
            <div class="col-10">
                <EmbedDisqus Path="@selecectedVideo" />
            </div>
            <div class="col-1"></div>
        </div>

    } else {
        <div style="width: 100%;display: grid;place-items: center;">
            <KidPic Spin=true Height="175" />
        </div>
    }


    <br><br><br><br><br><br>

    
</div>

@code {
    private RealmUser user = new RealmUser{};
    private bool isLoading = true;
    private bool isRightClick = false;
    private string selecectedVideo = null;
    private string selecectedVideoId = null;

    private List<VideoListItem> l;
    

    void HandleRightClick(MouseEventArgs args, string id)
    {
        if (args.Button == 2) {
            selecectedVideoId = id;
            isRightClick = true;
            StateHasChanged();
        }
    }

    private void SwitchVideoClick(MouseEventArgs e, VideoListItem lvi)
    {
        isRightClick = false;
        SwitchVideo(lvi.path);
        selecectedVideoId = lvi._id;
        isRightClick = true;
    }

    private void SwitchVideo(string path) {
        selecectedVideo = path;
        StateHasChanged();
    }

    private async Task MarkAsFav() {
        string[] args = {selecectedVideoId};
        await JSRuntime.InvokeVoidAsync("realmShim_Function", "setAsFav", args);
        await GetVids();
    }

    private async Task MarkAsArch() {
        string[] args = {selecectedVideoId};
        await JSRuntime.InvokeVoidAsync("realmShim_Function", "setAsArch", args);
        await GetVids();
    }

    private async Task GetVids() {
        isLoading = true;
        string[] args = {};
        l = await JSRuntime.InvokeAsync<List<VideoListItem>>("realmShim_Function", "getLatestVids", args);
        SwitchVideo(l.Last().path);
        isLoading = false;
        isRightClick = false;
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await JSRuntime.InvokeAsync<RealmUser>("getUserDetails");
            await GetVids();
            
        } catch(Exception ex) {
            NavigationManager.NavigateTo("/");
        }
    }
}