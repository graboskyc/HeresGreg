@layout MainLayout;
@page "/Random";
@page "/RandomVid";
@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime;
@using HeresKids.Datamodels;

<div class="">    
    @if(!isLoading) {
        <div class="row">
            <div class="col-3"></div>
            <div class="col-6">
                <button @onclick="GetAVideo" class="btn btn-gsky-secondary">Get Next Random Video</button>
            </div>
            <div class="col-3"></div>
        </div>

        <div class="row">
            <div class="col-3"></div>
            <div class="col-6" style="text-align: center;">
                <h3>@vli.babyname on @vli.created.ToLocalTime().ToString("MM/dd/yyyy")</h3>
            </div>
            <div class="col-3"></div>
        </div>

        <div class="row" style="margin-top:20px;">
            <div class="col-1"></div>
            <div class="col-10">
                <EmbedVid Path="@selecectedVideo" />
            </div>
            <div class="col-1"></div>
        </div>

        <div class="row" style="margin-top:20px;">
            <div class="col-1"></div>
            <div class="col-10">
                <EmbedDisqus Path="@selecectedVideo" />
            </div>
            <div class="col-1"></div>
        </div>
    } else {
        <div style="width: 100%;display: grid;place-items: center;">
            <KidPic Height="175" Spin=true />
        </div>
    }


    <br><br><br><br><br><br>

    
</div>

@code {
    private RealmUser user = new RealmUser{};
    private bool isLoading = true;
    private string selecectedVideo = null;

    private VideoListItem vli;


    private void SwitchVideo(string path) {
        selecectedVideo = path;
        StateHasChanged();
    }

    private async Task GetAVideo() {
        isLoading = true;
        string[] args = {};
        vli = await JSRuntime.InvokeAsync<VideoListItem>("realmShim_Function", "getRandomVid", args);
        SwitchVideo(vli.path);
        isLoading = false;
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await JSRuntime.InvokeAsync<RealmUser>("getUserDetails");
            await GetAVideo();
            
        } catch(Exception ex) {
            NavigationManager.NavigateTo("/");
        }
    }
}