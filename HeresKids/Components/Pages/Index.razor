@layout LoginLayout
@page "/"
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager;
@using HeresKids.Datamodels;

<div style="text-align:center;margin-top:20px;">

    <h1 style="text-align:center;color:var(--gsky-primary);margin-top:20px;">Please Login</h1>
    <KidPic Height="100" Spin=false />
    <br />

    @if(failedLogin) {
        <div class="alert alert-danger" role="alert">Your email address or password is incorrect.</div>
    }


    <label for="txt_username">Email Address</label>
    <input type="text" name="txt_username" id="txt_username" @bind="username" @bind:event="onchange" placeholder="Email" />

    <label for="txt_password">Password</label>
    <input type="password" name="txt_password" id="txt_password" @bind="password" @bind:event="onchange" placeholder="Password" />

    @if(!isLoading) {
        <button @onclick="RunLogin" id="btn_login" style="width:100%;">Login</button>
    } else {
        <button aria-busy="true" aria-label="Logging In..." style="width:100%;">Logging In...</button>
    }

</div>

@code {
    private bool isLoading = false;
    private bool isReset = false;
    private bool loginSuccess = false;
    private bool failedLogin = false;
    private string username = "";
    private string password;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("captureEnter", "btn_login");
    }

    private async Task RunLogin() {
        isLoading = true;
        loginSuccess = await JSRuntime.InvokeAsync<bool>("login", username, password);
        if(loginSuccess) {
            NavigationManager.NavigateTo("/Vids");
        } else {
            failedLogin = true;
        } 
        isLoading = false;
    }

    private async Task RunReset() {
        isLoading = true;
        await JSRuntime.InvokeVoidAsync("resetUser", username);
        isReset = true;
    }
    
}